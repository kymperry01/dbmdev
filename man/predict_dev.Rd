% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_dev.R
\name{predict_dev}
\alias{predict_dev}
\title{Predict temperature-dependent development rates of the diamondback moth}
\usage{
predict_dev(
  df,
  FUN = briere2,
  params = dev_params(),
  start_date,
  start_hour = 12,
  start_stage,
  start_dev = NULL,
  gens = 1,
  direction = "forward",
  keep = NULL
)
}
\arguments{
\item{df}{A \code{data.frame} of hourly temperature observations with
three variables named "datetime" (POSIX), "obs" (numeric
temperature observations in degrees Celsius), and "location_key" (a
character code that uniquely identifies a location, either provided by the
user or arbitrarily by the \code{\link{hourly}} function.
Hourly temperatures can be interpolated from daily maximum minimum
temperatures using \code{\link{hourly}}.}

\item{FUN}{The name of the function used to model temperature-dependent
development responses (character or unquoted function name).
Only model "briere2" is implemented currently.}

\item{params}{A \code{matrix} containing the developmental
parameters of the briere2 model for individual stages of diamondback moth.
Fitted parameters for diamondback moth are generated by default
by a call to \code{\link{dev_params}}.
The four parameters are:
\emph{a}, a constant from the model;
\emph{Tmin}, the minimum threshold temperature for development in degrees Celsius;
\emph{Tmax}, the maximum threshold temperature for development in degrees Celsius;
\emph{m}, the power coefficient.
Named matrix rows hold the parameters for each life stage.}

\item{start_date}{The starting date for development in
YYYY-MM-DD format (character)}

\item{start_hour}{The starting hour for development from 1-23
(numeric). The default value is 12 (midday).}

\item{start_stage}{The starting life stage for development (character).
Must be a life stage for which parameters exist in the \code{params} object
Run \code{row.names(devparams())} to see possible values.}

\item{start_dev}{The proportion (numeric) of stage development from which to commence
development predictions, ranging from 0 (no development) to 1
(development complete). The default value of 0.5 is the
mid-point of stage development. To predict the full
development period of the starting life stage, set start_dev to 0 if
modelling forward in time or to 1 if modelling back in time.}

\item{gens}{The number of complete generations to predict (numeric). This
number is limited by the length of the temperature data time series.}

\item{direction}{The direction in time, either "forward" or "back"
(character). The default value is "forward".}

\item{keep}{The results to output: "increments" outputs a \code{data.frame}
with cumulative hourly developmental increments, while "stages" or
"generations" output a \code{data.frames} summarising the time point when
development commenced and completed. The default output is a list
of three \code{data.frames} with all outputs.}
}
\value{
\code{data.frame} or \code{list}.
}
\description{
\code{predict_dev} is the main modelling function interface in
the \code{dbmdev} package.
It is used to predict temperature-dependent development rates of individual
life stages at hourly time steps, either forward or back in time, starting
from a user-specified biofix (time point and insect developmental stage).
It takes a single temperature data series.
To predict development at many locations with separate
temperature series, use \code{\link{predict_dev2}}.
}
\examples{
library(dplyr)

# Sample hourly temperatures at a given location
d1 <- daily(days = 200, start_date = "2023-09-01")
h1 <- hourly(d1)

# See the life stages
dev_params() # developmental parameters for diamondback moth
row.names(dev_params()) # possible values for "start_stage"

# Predict forward 2 generations from the "egg" stage
predict_dev(
  df = h1,
  start_date = "2023-09-02",
  start_stage = "egg",
  start_dev = 0.5,
  gens = 2,
  direction = "forward",
  keep = "stages"
  )

# Predict back in time 1 generation from the 4th instar stage
predict_dev(
  df = h1,
  start_date = "2024-03-01",
  start_stage = "instar4",
  start_dev = 0.5,
  gens = 1,
  direction = "back",
  keep = "stages"
  )

# A warning is thrown if you try to predict beyond the available
# temperature data
predict_dev(
  df = h1,
  start_date = "2024-03-01",
  start_stage = "instar1_2",
  start_dev = 0,
  gens = 5,
  direction = "forward",
  keep = "gens"
  )

}
